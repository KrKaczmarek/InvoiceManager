@model WebApi.Models.InvoiceViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>InvoiceViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.InvoiceId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.InvoiceId, new {  @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.InvoiceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Recipient.RecipientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.RecipientId, Model.RecipientList, "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RecipientId, "", new { @class = "text-danger" })


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Supplier.SupplierName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.SupplierId, Model.SupplierList, "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Employee.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
          
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.EmployeeId, Model.EmployeeList, "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duck.DuckType, htmlAttributes: new { @class = "control-label col-md-2" })
         
            <div class="col-md-10">
            @Html.DropDownListFor(m => m.DuckId, Model.DuckList, "--Select--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DuckId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Date, new { disabled = "disabled", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
